@{
    ViewBag.Title = "Transfers";
    Layout = "~/Views/Shared/_LayoutWarehouseManager.cshtml";
}

<h2>Transfer</h2>

@model List<LogiManage.ViewModels.TransferViewModel>

@{
    var warehouseId = (int)Session["WarehouseID"];
}


<h3> Requested Transfers</h3>
<table class="table" border="1">
    <thead>
        <tr>
            <th>Transfer Status</th>
            <th>Transfer Date</th>
            <th>Source Warehouse</th>
            <th>Destination Warehouse</th>
            <th>Product Name</th>
            <th>Quantity</th>
            
        </tr>
    </thead>
    <tbody>
        @if (Model != null && Model.Any())
        {
            foreach (var transfer in Model.Where(x => x.TransferStatus == "Requested" && x.DestinationWarehouseID == @warehouseId))
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => transfer.TransferStatus)</td>
                    <td>@Html.DisplayFor(modelItem => transfer.TransferDate)</td>
                    <td>@Html.DisplayFor(modelItem => transfer.SourceWarehouseName)</td>
                    <td>@Html.DisplayFor(modelItem => transfer.DestinationWarehouseName)</td>
                    <td>@Html.DisplayFor(modelItem => transfer.ProductName)</td>
                    <td>@Html.DisplayFor(modelItem => transfer.Quantity)</td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="7">No requested transfers found.</td>
            </tr>
        }


    </tbody>
</table>
<br />

<h3> Completed Transfers (outcoming) </h3>
<table class="table" border="1">
    <thead>
        <tr>
            <th>Transfer Status</th>
            <th>Transfer Date</th>
            <th>Source Warehouse</th>
            <th>Destination Warehouse</th>
            <th>Product Name</th>
            <th>Quantity</th>
           
        </tr>
    </thead>
    <tbody>
        @if (Model != null && Model.Any())
        {
            foreach (var transfer in Model.Where(x => x.TransferStatus == "Completed" && x.SourceWarehouseID == @warehouseId))
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => transfer.TransferStatus)</td>
                    <td>@Html.DisplayFor(modelItem => transfer.TransferDate)</td>
                    <td>@Html.DisplayFor(modelItem => transfer.SourceWarehouseName)</td>
                    <td>@Html.DisplayFor(modelItem => transfer.DestinationWarehouseName)</td>
                    <td>@Html.DisplayFor(modelItem => transfer.ProductName)</td>
                    <td>@Html.DisplayFor(modelItem => transfer.Quantity)</td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="7">No completed transfers found.</td>
            </tr>
        }
    </tbody>
</table>
<br />
<h3> Completed Transfers (incoming) </h3>
<table class="table" border="1">
    <thead>
        <tr>
            <th>Transfer Status</th>
            <th>Transfer Date</th>
            <th>Source Warehouse</th>
            <th>Destination Warehouse</th>
            <th>Product Name</th>
            <th>Quantity</th>
            
        </tr>
    </thead>
    <tbody>
        @if (Model != null && Model.Any())
        {
            foreach (var transfer in Model.Where(x => x.TransferStatus == "Completed" && x.DestinationWarehouseID == @warehouseId))
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => transfer.TransferStatus)</td>
                    <td>@Html.DisplayFor(modelItem => transfer.TransferDate)</td>
                    <td>@Html.DisplayFor(modelItem => transfer.SourceWarehouseName)</td>
                    <td>@Html.DisplayFor(modelItem => transfer.DestinationWarehouseName)</td>
                    <td>@Html.DisplayFor(modelItem => transfer.ProductName)</td>
                    <td>@Html.DisplayFor(modelItem => transfer.Quantity)</td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="7">No completed transfers found.</td>
            </tr>
        }
    </tbody>
</table>
<br />


<h3>Rejected Transfers (incoming) </h3>
<table class="table" border="1">
    <thead>
        <tr>
            <th>Transfer Status</th>
            <th>Transfer Date</th>
            <th>Source Warehouse</th>
            <th>Destination Warehouse</th>
            <th>Product Name</th>
            <th>Quantity</th>
            <th>Action </th>
        </tr>
    </thead>
    <tbody>
        @if (Model != null && Model.Any())
        {
            foreach (var transfer in Model.Where(x => x.TransferStatus == "Rejected" && x.DestinationWarehouseID == @warehouseId))
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => transfer.TransferStatus)</td>
                    <td>@Html.DisplayFor(modelItem => transfer.TransferDate)</td>
                    <td>@Html.DisplayFor(modelItem => transfer.SourceWarehouseName)</td>
                    <td>@Html.DisplayFor(modelItem => transfer.DestinationWarehouseName)</td>
                    <td>@Html.DisplayFor(modelItem => transfer.ProductName)</td>
                    <td>@Html.DisplayFor(modelItem => transfer.Quantity)</td>
                    <td>
                        @using (Html.BeginForm("AddOrderRequest", "Warehouse", FormMethod.Post))
                        {

                            <button type="submit" class=" btn btn-outline-info">Order Request</button>
                        }
                    </td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="7">No uncompleted transfers found.</td>
            </tr>
        }
    </tbody>
</table>
<br />
<h3>Rejected Transfers (outcoming) </h3>
<table class="table" border="1">
    <thead>
        <tr>
            <th>Transfer Status</th>
            <th>Transfer Date</th>
            <th>Source Warehouse</th>
            <th>Destination Warehouse</th>
            <th>Product Name</th>
            <th>Quantity</th>
            
        </tr>
    </thead>
    <tbody>
        @if (Model != null && Model.Any())
        {
            foreach (var transfer in Model.Where(x => x.TransferStatus == "Rejected" && x.SourceWarehouseID == @warehouseId))
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => transfer.TransferStatus)</td>
                    <td>@Html.DisplayFor(modelItem => transfer.TransferDate)</td>
                    <td>@Html.DisplayFor(modelItem => transfer.SourceWarehouseName)</td>
                    <td>@Html.DisplayFor(modelItem => transfer.DestinationWarehouseName)</td>
                    <td>@Html.DisplayFor(modelItem => transfer.ProductName)</td>
                    <td>@Html.DisplayFor(modelItem => transfer.Quantity)</td>

                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="7">No uncompleted transfers found.</td>
            </tr>
        }
    </tbody>
</table>
<br />

<h3>Preparing Transfers (incoming)</h3>
<table class="table" border="1">
    <thead>
        <tr>
            <th>Transfer Status</th>
            <th>Transfer Date</th>
            <th>Source Warehouse</th>
            <th>Destination Warehouse</th>
            <th>Product Name</th>
            <th>Quantity</th>
        </tr>
    </thead>
    <tbody>
        @if (Model != null && Model.Any())
        {
            foreach (var transfer in Model.Where(x => x.TransferStatus == "Preparing" && x.DestinationWarehouseID == @warehouseId))
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => transfer.TransferStatus)</td>
                    <td>@Html.DisplayFor(modelItem => transfer.TransferDate)</td>
                    <td>@Html.DisplayFor(modelItem => transfer.SourceWarehouseName)</td>
                    <td>@Html.DisplayFor(modelItem => transfer.DestinationWarehouseName)</td>
                    <td>@Html.DisplayFor(modelItem => transfer.ProductName)</td>
                    <td>@Html.DisplayFor(modelItem => transfer.Quantity)</td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="7">No preparing transfers found.</td>
            </tr>
        }
    </tbody>
</table>
<br />
<h3>Preparing Transfers (outcoming)</h3>
<table class="table" border="1">
    <thead>
        <tr>
            <th>Transfer Status</th>
            <th>Transfer Date</th>
            <th>Source Warehouse</th>
            <th>Destination Warehouse</th>
            <th>Product Name</th>
            <th>Quantity</th>
        </tr>
    </thead>
    <tbody>
        @if (Model != null && Model.Any())
        {
            foreach (var transfer in Model.Where(x => x.TransferStatus == "Preparing" && x.SourceWarehouseID == @warehouseId))
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => transfer.TransferStatus)</td>
                    <td>@Html.DisplayFor(modelItem => transfer.TransferDate)</td>
                    <td>@Html.DisplayFor(modelItem => transfer.SourceWarehouseName)</td>
                    <td>@Html.DisplayFor(modelItem => transfer.DestinationWarehouseName)</td>
                    <td>@Html.DisplayFor(modelItem => transfer.ProductName)</td>
                    <td>@Html.DisplayFor(modelItem => transfer.Quantity)</td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="7">No preparing transfers found.</td>
            </tr>
        }
    </tbody>
</table>
<br />

<h3>Uncompleted Transfers (incoming)</h3>
<table class="table" border="1">
    <thead>
        <tr>
            <th>Transfer Status</th>
            <th>Transfer Date</th>
            <th>Source Warehouse</th>
            <th>Destination Warehouse</th>
            <th>Product Name</th>
            <th>Quantity</th>
        </tr>
    </thead>
    <tbody>
        @if (Model != null && Model.Any())
        {
            foreach (var transfer in Model.Where(x => x.TransferStatus == "Uncompleted" && x.DestinationWarehouseID == @warehouseId))
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => transfer.TransferStatus)</td>
                    <td>@Html.DisplayFor(modelItem => transfer.TransferDate)</td>
                    <td>@Html.DisplayFor(modelItem => transfer.SourceWarehouseName)</td>
                    <td>@Html.DisplayFor(modelItem => transfer.DestinationWarehouseName)</td>
                    <td>@Html.DisplayFor(modelItem => transfer.ProductName)</td>
                    <td>@Html.DisplayFor(modelItem => transfer.Quantity)</td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="7">No uncompleted transfers found.</td>
            </tr>
        }
    </tbody>
</table>
<br />
<h3>Uncompleted Transfers (outcoming)</h3>
<table class="table" border="1">
    <thead>
        <tr>
            <th>Transfer Status</th>
            <th>Transfer Date</th>
            <th>Source Warehouse</th>
            <th>Destination Warehouse</th>
            <th>Product Name</th>
            <th>Quantity</th>
        </tr>
    </thead>
    <tbody>
        @if (Model != null && Model.Any())
        {
            foreach (var transfer in Model.Where(x => x.TransferStatus == "Uncompleted" && x.SourceWarehouseID == @warehouseId))
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => transfer.TransferStatus)</td>
                    <td>@Html.DisplayFor(modelItem => transfer.TransferDate)</td>
                    <td>@Html.DisplayFor(modelItem => transfer.SourceWarehouseName)</td>
                    <td>@Html.DisplayFor(modelItem => transfer.DestinationWarehouseName)</td>
                    <td>@Html.DisplayFor(modelItem => transfer.ProductName)</td>
                    <td>@Html.DisplayFor(modelItem => transfer.Quantity)</td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="7">No uncompleted transfers found.</td>
            </tr>
        }
    </tbody>
</table>
<h3> Delivered Transfers (incoming)</h3>
<table class="table" border="1">
    <thead>
        <tr>
            <th>Transfer Status</th>
            <th>Transfer Date</th>
            <th>Source Warehouse</th>
            <th>Destination Warehouse</th>
            <th>Product Name</th>
            <th>Quantity</th>
           
        </tr>
    </thead>
    <tbody>
        @foreach (var transfer in Model.Where(x => x.TransferStatus == "Delivered" && x.DestinationWarehouseID == @warehouseId))
        {
            <tr>
                <td>@transfer.TransferStatus</td>
                <td>@transfer.TransferDate</td>
                <td>@transfer.SourceWarehouseName</td>
                <td>@transfer.DestinationWarehouseName</td>
                <td>@transfer.ProductName</td>
                <td>@transfer.Quantity</td>

            </tr>
        }
    </tbody>
</table>

<h3> Delivered Transfers (outcoming)</h3>
<table class="table" border="1">
    <thead>
        <tr>
            <th>Transfer Status</th>
            <th>Transfer Date</th>
            <th>Source Warehouse</th>
            <th>Destination Warehouse</th>
            <th>Product Name</th>
            <th>Quantity</th>
           
        </tr>
    </thead>
    <tbody>
        @foreach (var transfer in Model.Where(x => x.TransferStatus == "Delivered" && x.SourceWarehouseID == @warehouseId))
        {
            <tr>
                <td>@transfer.TransferStatus</td>
                <td>@transfer.TransferDate</td>
                <td>@transfer.SourceWarehouseName</td>
                <td>@transfer.DestinationWarehouseName</td>
                <td>@transfer.ProductName</td>
                <td>@transfer.Quantity</td>


            </tr>
        }
    </tbody>
</table>



