@{
    ViewBag.Title = "TransferORequest";
    Layout = "~/Views/Shared/_LayoutOperator.cshtml";
}

<h2>TransferORequests</h2>

@model List<LogiManage.ViewModels.TransferViewModel>

@{
    var warehouseId = (int)Session["WarehouseID"];
}


<div>
    @Html.ActionLink("Add Transfer Request", "AddTransferORequest", new { @class = "btn-btn-primary" })
</div>
<br />

<table border="1">
    <thead>
        <tr>
            <th>Transfer Status</th>
            <th>Transfer Date</th>
            <th>Source Warehouse</th>
            <th>Destination Warehouse</th>
            <th>Product Name</th>
            <th>Quantity</th>
            <th>Actions</th>


        </tr>
    </thead>
    <tbody>

        @foreach (var transfer in Model.Where(x => x.TransferStatus == "Preparing" && x.SourceWarehouseID == @warehouseId))
        {
            <tr>
                <td>@transfer.TransferStatus</td>
                <td>@transfer.TransferDate</td>
                <td>@transfer.SourceWarehouseName</td>
                <td>@transfer.DestinationWarehouseName</td>
                <td>@transfer.ProductName</td>
                <td>@transfer.Quantity</td>
                <td>
                    <td>
                        @using (Html.BeginForm("Delivered", "Operator", FormMethod.Post))
                        {
                            @Html.Hidden("transferId", transfer.TransferID)
                            <button type="submit" class="btn btn-outline-success"> Delivered </button>
                        }
                    </td>
                    <td>
                        @using (Html.BeginForm("Undelivered", "Operator", FormMethod.Post))
                        {
                            @Html.Hidden("transferId", transfer.TransferID)
                            <button type="submit" class="btn btn-outline-warning"> Undelivered </button>
                        }
                    </td>
                
            </tr>
        }

    </tbody>
</table>
<br />
<h2> ORejected Transfers </h2>
<table border="1">
    <thead>
        <tr>
            <th>Transfer Status</th>
            <th>Transfer Date</th>
            <th>Source Warehouse</th>
            <th>Destination Warehouse</th>
            <th>Product Name</th>
            <th>Quantity</th>
            <th>Actions</th>


        </tr>
    </thead>
    <tbody>

        @foreach (var transfer in Model.Where(x => x.TransferStatus == "ORejected" && x.DestinationWarehouseID == @warehouseId))
        {
            <tr>
                <td>@transfer.TransferStatus</td>
                <td>@transfer.TransferDate</td>
                <td>@transfer.SourceWarehouseName</td>
                <td>@transfer.DestinationWarehouseName</td>
                <td>@transfer.ProductName</td>
                <td>@transfer.Quantity</td>

            </tr>
        }

    </tbody>
</table>
<br />
<h2>ORequested Transfers</h2>
<table border="1">
    <thead>
        <tr>
            <th>Transfer Status</th>
            <th>Transfer Date</th>
            <th>Source Warehouse</th>
            <th>Destination Warehouse</th>
            <th>Product Name</th>
            <th>Quantity</th>
            <th>Actions</th>


        </tr>
    </thead>
    <tbody>

        @foreach (var transfer in Model.Where(x => x.TransferStatus == "ORequested" && x.DestinationWarehouseID == @warehouseId))
        {
            <tr>
                <td>@transfer.TransferStatus</td>
                <td>@transfer.TransferDate</td>
                <td>@transfer.SourceWarehouseName</td>
                <td>@transfer.DestinationWarehouseName</td>
                <td>@transfer.ProductName</td>
                <td>@transfer.Quantity</td>

            </tr>
        }

    </tbody>
</table>
<br />





